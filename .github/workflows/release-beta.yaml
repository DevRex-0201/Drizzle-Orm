name: Release (beta)

on:
  push:
    branches:
      - beta
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: true

      - name: Build
        run: pnpm build

      - name: Pack
        run: pnpm run pack

      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            */package.tgz
            */package.json

  release:
    needs:
      - build
    strategy:
      matrix:
        package:
          - drizzle-orm
          - drizzle-orm-mysql
          - drizzle-orm-pg
          - drizzle-orm-sqlite
          - drizzle-zod
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'

      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Publish
        run: |
          beta=$(npm view --json ${{ matrix.package }} dist-tags.beta | jq -r)
          version=$(jq -r .version package.json)
          if [[ $beta != $version ]]; then
            echo "Beta:    $beta"
            echo "Current: $version"

            (cd .. && pnpm i)
            npm run publish -- --tag beta

            # Post release message to Discord
            curl -X POST -H "Content-Type: application/json" -d "{\"embeds\": [{\"title\": \"New \`${{ matrix.package }}\` release! ðŸŽ‰\", \"url\": \"https://www.npmjs.com/package/${{ matrix.package }}/v/$version\", \"color\": \"12907856\", \"fields\": [{\"name\": \"Version\", \"value\": \"\`$version\`\"}, {\"name\": \"Tag\", \"value\": \"\`beta\`\"}]}]}" ${{ secrets.DISCORD_DEV_RELEASE_WEBHOOK_URL }}
          else
            echo "Already up to date: $version"
          fi
        working-directory: ${{ matrix.package }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
