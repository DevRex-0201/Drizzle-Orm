name: Release (feature branch)

on:
  push:
    branches-ignore:
      - main

jobs:
  release:
    strategy:
      matrix:
        package:
          - drizzle-orm
          - drizzle-zod
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: true

      - name: Build & publish
        run: |
          tag="${{ github.ref_name }}"
          old_version="$(jq -r .version package.json)"
          version="$old_version-$(git rev-parse --short HEAD)"
          is_version_published="$(npm view ${{ matrix.package }} versions --json | jq -r '.[] | select(. == "'$version'") | . == "'$version'"')"

          if [[ "$is_version_published" == "true" ]]; then
            echo "Version $version already published, adding tag $tag"
            npm dist-tag add ${{ matrix.package }}@$version $tag
          else
            echo "Publishing ${{ matrix.package }}@$tag using version $version"
            npm version $version
            (cd .. && npm run pack -- --filter ${{ matrix.package }})
            npm run publish -- --tag $tag
          fi

          # Post release message to Discord
          curl -X POST -H "Content-Type: application/json" -d "{\"embeds\": [{\"title\": \"New \`${{ matrix.package }}\` release! ðŸŽ‰\", \"url\": \"https://www.npmjs.com/package/${{ matrix.package }}/v/$version\", \"color\": \"12907856\", \"fields\": [{\"name\": \"Version\", \"value\": \"\`$version\`\"}, {\"name\": \"Tag\", \"value\": \"\`$tag\`\"}]}]}" ${{ secrets.DISCORD_DEV_RELEASE_WEBHOOK_URL }}
        working-directory: ${{ matrix.package }}
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
